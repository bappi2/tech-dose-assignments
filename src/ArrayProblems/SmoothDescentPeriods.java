package ArrayProblems;

public class SmoothDescentPeriods {
    public long getDescentPeriods(int[] prices) {

        int ans = 0;
        for (int len = 1; len <= prices.length; len++) {
            if (len == 1) {
                ans += prices.length;
            }
            else {
                for (int i =0; i <= prices.length - len ; i++) {
                    boolean isSmooth = true;
                    for (int j = 0; j < len -1; j++) {
                        if (prices[i+j] - 1 != prices[i + j +1]) {
                            isSmooth = false;
                        }
                    }
                    if (isSmooth == true) {
                        ans++;
                    }

                }
            }
        }
        return ans;
    }

    public static void main(String[] args) {
        int [] prices =
                {99010,99009,99008,99007,99006,99005,99004,99003,99002,99001,99000,99059,99058,99057,99056,99055,99054,99053,99052,99051,99050,99049,99048,99047,99046,99045,99044,99043,99042,99041,99040,99039,99038,99037,99036,99035,99034,99033,99032,99031,99030,99029,99028,99027,99026,99025,99024,99023,99022,99021,99020,99019,99018,99017,99016,99015,99014,99013,99012,99011,99010,99009,99008,99007,99006,99005,99004,99003,99002,99001,99000,99109,99108,99107,99106,99105,99104,99103,99102,99101,99100,99099,99098,99097,99096,99095,99094,99093,99092,99091,99090,99089,99088,99087,99086,99085,99084,99083,99082,99081,99080,99079,99078,99077,99076,99075,99074,99073,99072,99071,99070,99069,99068,99067,99066,99065,99064,99063,99062,99061,99060,99059,99058,99057,99056,99055,99054,99053,99052,99051,99050,99049,99048,99047,99046,99045,99044,99043,99042,99041,99040,99039,99038,99037,99036,99035,99034,99033,99032,99031,99030,99029,99028,99027,99026,99025,99024,99023,99022,99021,99020,99019,99018,99017,99016,99015,99014,99013,99012,99011,99010,99009,99008,99007,99006,99005,99004,99003,99002,99001,99000,99060,99059,99058,99057,99056,99055,99054,99053,99052,99051,99050,99049,99048,99047,99046,99045,99044,99043,99042,99041,99040,99039,99038,99037,99036,99035,99034,99033,99032,99031,99030,99029,99028,99027,99026,99025,99024,99023,99022,99021,99020,99019,99018,99017,99016,99015,99014,99013,99012,99011,99010,99009,99008,99007,99006,99005,99004,99003,99002,99001,99000,99079,99078,99077,99076,99075,99074,99073,99072,99071,99070,99069,99068,99067,99066,99065,99064,99063,99062,99061,99060,99059,99058,99057,99056,99055,99054,99053,99052,99051,99050,99049,99048,99047,99046,99045,99044,99043,99042,99041,99040,99039,99038,99037,99036,99035,99034,99033,99032,99031,99030,99029,99028,99027,99026,99025,99024,99023,99022,99021,99020,99019,99018,99017,99016,99015,99014,99013,99012,99011,99010,99009,99008,99007,99006,99005,99004,99003,99002,99001,99000,99059,99058,99057,99056,99055,99054,99053,99052,99051,99050,99049,99048,99047,99046,99045,99044,99043,99042,99041,99040,99039,99038,99037,99036,99035,99034,99033,99032,99031,99030,99029,99028,99027,99026,99025,99024,99023,99022,99021,99020,99019,99018,99017,99016,99015,99014,99013,99012,99011,99010,99009,99008,99007,99006,99005,99004,99003,99002,99001,99000,99055,99054,99053,99052,99051,99050,99049,99048,99047,99046,99045,99044,99043,99042,99041,99040,99039,99038,99037,99036};

        SmoothDescentPeriods sdp = new SmoothDescentPeriods();
        System.out.println(sdp.getDescentPeriods(prices));
    }
}
